<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtLoadTestReportMapper">

    <resultMap id="BaseResultMap" type="io.metersphere.base.domain.LoadTestReport">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="test_id" jdbcType="VARCHAR" property="testId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
        <result column="status" jdbcType="VARCHAR" property="status" />
    </resultMap>

    <sql id="Base_Column_List">
    id, test_id, name, create_time, update_time, status
    </sql>

    <select id="getReportList" resultType="io.metersphere.dto.ReportDTO">
        select ltr.id, ltr.name, ltr.test_id as testId, ltr.description,
               ltr.create_time as createTime, ltr.update_time as updateTime, ltr.status as status, lt.name as testName
          from load_test_report ltr join load_test lt on ltr.test_id = lt.id
        <if test="reportRequest.workspaceId != null">
            JOIN project on project.id = lt.project_id
        </if>
        <where>
            <if test="reportRequest.name != null">
                AND ltr.name like CONCAT('%', #{reportRequest.name},'%')
            </if>
            <if test="reportRequest.workspaceId != null">
                AND workspace_id = #{reportRequest.workspaceId,jdbcType=VARCHAR}
            </if>
        </where>
        ORDER BY ltr.update_time DESC
    </select>

    <select id="getReportTestAndProInfo" resultType="io.metersphere.dto.ReportDTO">
        select ltr.id, ltr.name, ltr.test_id as testId, ltr.description,
        ltr.create_time as createTime, ltr.update_time as updateTime, ltr.status as status, lt.name as testName,
        p.id as projectId, p.name as projectName
        from load_test_report ltr join load_test lt on ltr.test_id = lt.id join project p on lt.project_id = p.id
        where ltr.id = #{id}
    </select>

    <update id="appendLine">
        UPDATE load_test_report
        SET content = concat(content, #{line})
        WHERE id = #{testId}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from load_test_report
        where id = #{id,jdbcType=VARCHAR}
    </select>

</mapper>