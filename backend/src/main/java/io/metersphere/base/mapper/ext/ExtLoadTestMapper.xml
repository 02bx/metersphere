<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtLoadTestMapper">

    <resultMap id="BaseResultMap" type="io.metersphere.dto.LoadTestDTO"
               extends="io.metersphere.base.mapper.LoadTestMapper.BaseResultMap">
        <result column="project_name" property="projectName"/>
        <result column="user_name" property="userName"/>
    </resultMap>

    <select id="list" resultMap="BaseResultMap" parameterType="io.metersphere.track.request.testplan.QueryTestPlanRequest">
        select load_test.*, project.name as project_name, user.name as user_name
        from load_test
        left join project on load_test.project_id = project.id
        left join user on load_test.user_id = user.id
        <where>
            <if test="request.name != null">
                and load_test.name like CONCAT('%', #{request.name},'%')
            </if>
            <if test="request.workspaceId != null">
                AND project.workspace_id = #{request.workspaceId}
            </if>
            <if test="request.projectId != null">
                AND project.id = #{request.projectId}
            </if>
            <if test="request.id != null">
                AND load_test.id = #{request.id}
            </if>
        </where>
        <if test="request.orders != null and request.orders.size() > 0">
            order by
            <foreach collection="request.orders" separator="," item="order">
                test_plan_test_case.${order.name} ${order.type}
            </foreach>
        </if>
    </select>
    <select id="countByProjectId" resultType="java.lang.Long">
        select count(id) from load_test
        where project_id = #{projectId};
    </select>
    <select id="getLoadTestByProjectId" resultType="io.metersphere.base.domain.LoadTest">
        select id,name
        from load_test
        where project_id = #{projectId};
    </select>

</mapper>