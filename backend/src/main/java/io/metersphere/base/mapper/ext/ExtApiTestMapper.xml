<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.metersphere.base.mapper.ext.ExtApiTestMapper">

    <resultMap id="BaseResultMap" type="io.metersphere.api.dto.APITestResult"
               extends="io.metersphere.base.mapper.ApiTestMapper.BaseResultMap">
        <result column="project_name" property="projectName"/>
        <result column="user_name" property="userName"/>
    </resultMap>

    <select id="list" resultMap="BaseResultMap" parameterType="io.metersphere.api.dto.APITestResult">
        select api_test.*, project.name as project_name, user.name as user_name
        from api_test
        left join project on api_test.project_id = project.id
        left join user on api_test.user_id = user.id
        <where>
            <if test="request.name != null">
                and api_test.name like CONCAT('%', #{request.name},'%')
            </if>
            <if test="request.workspaceId != null">
                AND project.workspace_id = #{request.workspaceId}
            </if>
            <if test="request.projectId != null">
                AND project.id = #{request.projectId}
            </if>
            <if test="request.id != null">
                AND api_test.id = #{request.id}
            </if>
            <if test="reportRequest.filters != null and reportRequest.filters.size() > 0">
                <foreach collection="reportRequest.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        and api_test.${key} in
                        <foreach collection="values" item="value" separator="," open="(" close=")">
                            #{value}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="reportRequest.orders != null and reportRequest.orders.size() > 0">
            order by
            <foreach collection="reportRequest.orders" separator="," item="order">
                api_test.${order.name} ${order.type}
            </foreach>
        </if>
    </select>
    <select id="countByProjectId" resultType="java.lang.Long">
        select count(id) from api_test
        where project_id = #{projectId}
    </select>
    <select id="getApiTestByProjectId" resultType="io.metersphere.base.domain.ApiTest">
        select id,name
        from api_test
        where project_id = #{projectId}
    </select>

</mapper>